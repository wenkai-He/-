1.hash模式 我常用的模式 通过监听hashchange事件 
    #后的值为hash值 hash虽然在url中出现 但是不会包括在http请求 对后端无影响 所以改变hash不会重新加载页面 
2.history模式 利用了putstate和replacestate当他们进行修改url时 不会重新加载页面 pushstate是添加一条 replacestate是改变

对比 history：新的url可以是跟当前url同源的url 而hash只能改变#后面的hash值
              设置的新的url可以与当前一样，一样会把记录添加到历史记录栈中存储，而hash值必须不一样
              hash模式url中有个#影响颜值
    hash: 兼容性好 
            因为只有#前面的东西会发送 所以后端没有做到路由全覆盖也不会返回404
            而history模式 前端url必须和实际向后端发送的url保持一致 如果后端缺少对该路由的处理就会返回404 
            需要和后端进行配合 如果匹配不到应该返回同一个index.html页面 这个页面就是app依赖的页面
